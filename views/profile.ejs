<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= User.username %>'s Profile - Blaze Recipes</title>
    <link rel="stylesheet" href="/public/css/home.css" />
    <link rel="stylesheet" href="/public/css/profile.css" />
    <link rel="stylesheet" href="/public/css/dashboard.css" />
    <link rel="stylesheet" href="/public/css/sidebar.css">
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap"
      rel="stylesheet"
    />
    <link
      rel="shortcut icon"
      href="/public/assets/favicon/favicon.ico"
      type="image/x-icon"
    />
  </head>
  <body>
    <%# include('./partials/header.ejs') %>
    <%- include('./partials/sidebar.ejs') %>
    <main class="profile-container">
      <section class="profile-header-section">
        <div class="profile-banner"></div>
        <div class="profile-main-info">
          <div class="profile-image">
            <img
              src="<%= User.profileImage || '/public/assets/default-profile.png' %>"
              alt="<%= User.username %>'s profile picture"
            />
          </div>
          <div class="profile-details">
            <h1><%= User.username %></h1>
            <span class="user-tag"><%= User.tag %></span>
            <p class="user-bio"><%= User.bio || 'No bio added yet' %></p>
          </div>
          <div class="profile-actions">
            <% if (user && user._id.toString() !==
            User._id.toString()) { %>
            <button
              class="follow-btn <%= User.followers.includes(user._id) ? 'following' : '' %>"
              onclick="toggleFollow(this, '<%= User._id %>')"
              data-user-id="<%= User._id %>"
              onmouseenter="showUnfollow(this)"
              onmouseleave="hideUnfollow(this)"
            >
              <img
                src="/public/assets/<%= User.followers.includes(user._id) ? 'following-icon' : 'follow-icon' %>.svg"
                alt=""
                class="follow-icon"
              />
              <span class="follow-text">
                <%= User.followers.includes(user._id) ? 'Following' :
                'Follow' %>
              </span>
            </button>
            <% } %>
          </div>
        </div>
      </section>

      <section class="profile-stats">
        <div class="stat-card">
          <h3>Recipes</h3>
          <p class="stat-number"><%= User.posts?.length || 0 %></p>
        </div>
        <div class="stat-card">
          <h3>Following</h3>
          <p class="stat-number"><%= User.following?.length || 0 %></p>
        </div>
        <div class="stat-card">
          <h3>Followers</h3>
          <p class="stat-number"><%= User.followers?.length || 0 %></p>
        </div>
      </section>

      <section class="user-recipes">
        <h2><%= User.username %>'s Recipes</h2>
        <div class="recipe-grid">
          <% if (User.posts && User.posts.length > 0) { %> <%
          User.posts.forEach(recipe => { %>
          <div class="recipe-card">
            <img
              class="recipe-main-img"
              src="<%= recipe.image %>"
              alt="<%= recipe.title %>"
            />
            <h3><%= recipe.title %></h3>
            <div class="recipe-stats">
              <span>
                <img src="/public/assets/heartlike.png" alt="Likes" />
                <%= recipe.likes?.length || 0 %>
              </span>
              <span>
                <img src="/public/assets/drawing-1.png" alt="Comments" />
                <%= recipe.comments?.length || 0 %>
              </span>
            </div>
          </div>
          <% }) %> <% } else { %>
          <p class="no-recipes">No recipes shared yet</p>
          <% } %>
        </div>
      </section>
    </main>

    <%- include('./partials/footer.ejs') %>

    
    <!-- filepath: /home/venemouscoder/Desktop/PROJECTS/BLAZE_SPICES/views/profile.ejs -->
<script>
    function showUnfollow(button) {
        if (button.classList.contains('following')) {
            button.querySelector('.follow-text').textContent = 'Unfollow';
            button.querySelector('.follow-icon').src = '/public/assets/unfollow-icon.svg';
        }
    }

    function hideUnfollow(button) {
        if (button.classList.contains('following')) {
            button.querySelector('.follow-text').textContent = 'Following';
            button.querySelector('.follow-icon').src = '/public/assets/following-icon.svg';
        }
    }

    function toggleFollow(button, userId) {
        const isFollowing = button.classList.contains('following');
        const endpoint = `/user/${isFollowing ? 'unfollow' : 'follow'}/${userId}`;
        
        // Update UI immediately
        button.classList.toggle('following');
        const iconImg = button.querySelector('.follow-icon');
        const textSpan = button.querySelector('.follow-text');

        // Update button appearance
        if (!isFollowing) {
            iconImg.src = '/public/assets/following-icon.svg';
            textSpan.textContent = 'Following';
        } else {
            iconImg.src = '/public/assets/follow-icon.svg';
            textSpan.textContent = 'Follow';
        }

        // Update follower count
        const followerCount = document.querySelector('.stat-card:last-child .stat-number');
        const currentCount = parseInt(followerCount.textContent);
        followerCount.textContent = isFollowing ? currentCount - 1 : currentCount + 1;

        // Make API call
        fetch(endpoint, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                // Revert changes if request failed
                button.classList.toggle('following');
                iconImg.src = `/public/assets/${isFollowing ? 'following-icon' : 'follow-icon'}.svg`;
                textSpan.textContent = isFollowing ? 'Following' : 'Follow';
                followerCount.textContent = currentCount;
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .catch(error => {
            console.error('Error:', error);
            // Show error message to user
            const errorMessage = document.createElement('div');
            errorMessage.className = 'error-toast';
            errorMessage.textContent = 'Failed to update follow status';
            document.body.appendChild(errorMessage);
            setTimeout(() => errorMessage.remove(), 3000);
        });
    }
</script>
    <script>
        // Profile image preview
        const profileInput = document.getElementById('profile-photo');
        const profilePreview = document.getElementById('profile-preview');

        profileInput.addEventListener('change', function() {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(event) {
                    profilePreview.src = event.target.result;
                }
                reader.readAsDataURL(file);
            }
        });
    </script>
    <script src="/public/js/sidebar.js"></script>
  </body>
</html>
